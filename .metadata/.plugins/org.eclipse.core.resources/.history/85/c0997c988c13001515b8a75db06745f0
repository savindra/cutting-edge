package lk.ac.iit.humzearch;

import java.io.File;

import lk.ac.iit.humzearch.model.Response;

import com.parse.GetCallback;
import com.parse.ParseException;
import com.parse.ParseFile;
import com.parse.ParseImageView;
import com.parse.ParseQuery;
import com.parse.ParseUser;

import android.app.ProgressDialog;
import android.content.Intent;
import android.media.MediaPlayer;
import android.os.Bundle;
import android.os.Handler;
import android.os.PersistableBundle;
import android.support.v7.app.ActionBarActivity;
import android.util.Log;
import android.widget.Button;
import android.widget.SeekBar;
import android.widget.TextView;

public class ViewResponseItem extends ActionBarActivity {
	
	private final String TAG = ViewResponseItem.class.getSimpleName();
	
	private Intent intent;
	private TextView txtName, txtTitle, txtArtist, txtDelete;
	private ParseImageView imgUser;
	private Button btnPlay, btnPause, btnAccept, btnReject;
	private SeekBar seekBar;
	
	private MediaPlayer mMediaplayer;
	private Handler timerHandler;
	private double timeElapsed = 0;
	private boolean isPlaying = false;
	
	private ParseUser currentUser;
	private ParseQuery<Response> responseQuery;
	private ParseFile imgFile, tuneFile;
	private File mediaFile;
	private Response response;
	private String responseObjId;
	
	private ProgressDialog progressDialog;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.view_response_item);
		initialize();
	}

	private void initialize() {
		
		intent = getIntent();
		imgUser = (ParseImageView) findViewById(R.id.imgViewResponseItemUser);
		txtName = (TextView) findViewById(R.id.txtViewResponseName);
		txtTitle = (TextView) findViewById(R.id.txtViewResponseItemTitle);
		txtArtist = (TextView) findViewById(R.id.txtViewResponseItemArtist);
		txtDelete = (TextView) findViewById(R.id.txtViewResponseDelete);
		btnPlay = (Button) findViewById(R.id.btnViewResponsePlay);
		btnPause = (Button) findViewById(R.id.btnViewResponsePause);
		btnAccept = (Button) findViewById(R.id.btnViewResponseAccept);
		btnReject = (Button) findViewById(R.id.btnViewResponseReject);
		seekBar = (SeekBar) findViewById(R.id.seekBarViewResponse);
		
		timerHandler = new Handler();
		
		currentUser = ParseUser.getCurrentUser();
		response = new Response();
		
		downloadData();
	}

	private void downloadData() {
		progressDialog = ProgressDialog.show(this, "", "Loading...", true);
		
		responseObjId = intent.getStringExtra("response_id");
		txtName.setText(intent.getStringExtra("response_name"));
		txtTitle.setText(intent.getStringExtra("response_title"));
		txtArtist.setText(intent.getStringExtra("response_artist"));
		
		responseQuery = ParseQuery.getQuery("Response");
		responseQuery.whereEqualTo("objectId", responseObjId);
		responseQuery.include("createdBy");
		responseQuery.include("tune");
		responseQuery.getFirstInBackground(new GetCallback<Response>() {
			
			@Override
			public void done(Response object, ParseException e) {
				if(e == null){
					response = object;
					fillData(response);
				}else{
					progressDialog.dismiss();
					Log.d(TAG, e.getMessage());
				}
				
			}
		});
		
		
	}
	
	private void fillData(Response response) {
		
		imgFile = response.getCreatedBy().getParseFile("image");
		if(imgFile != null){
			imgUser.setParseFile(imgFile);
			imgUser.loadInBackground();
		}
	}
	
	

}
