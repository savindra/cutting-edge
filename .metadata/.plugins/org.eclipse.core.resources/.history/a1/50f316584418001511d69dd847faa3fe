package lk.ac.iit.humzearch;

import java.io.File;
import java.io.FileInputStream;

import lk.ac.iit.humzearch.app.AppController;
import lk.ac.iit.humzearch.model.TuneParse;

import com.android.volley.toolbox.ImageLoader;
import com.android.volley.toolbox.NetworkImageView;
import com.parse.ParseACL;
import com.parse.ParseException;
import com.parse.ParseFile;
import com.parse.ParseUser;
import com.parse.SaveCallback;

import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.content.DialogInterface.OnDismissListener;
import android.media.AudioManager;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.PersistableBundle;
import android.support.v7.app.ActionBarActivity;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.method.LinkMovementMethod;
import android.text.style.UnderlineSpan;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.SeekBar;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

public class TuneResultActivity extends ActionBarActivity {
	
	private final String TAG = TuneResultActivity.class.getSimpleName();
	
	private TextView txtTitle, txtArtist, txtAlbum, txtYear, txtPlayPreview, txtDialogArtist, txtDialogYear ;
	private NetworkImageView imgArtwork;
	private final String DEFAULT_ARTWORK = "http://i.imgur.com/ST7k1qw.jpg";
	ImageLoader imageLoader = AppController.getInstance().getImageLoader();
	private Dialog previewDialog, dialog;
	private ProgressDialog progressDialog;
	
	private MediaPlayer mMediaplayer;
	private Button btnPlay,btnStop, btnDialogShare;
	private SeekBar seekBar;
	private TextView txtTimer;
	private double timeElapsed = 0;
	private Spannable spanUnderline;
	
	private Handler timerHandler;
	private boolean isPlaying = false;;
	
	private Spinner dialogCountry, dialogLanguage;
	private Bundle extras;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.record_tune_result);
		
		getSupportActionBar().setTitle("Search Result");
		
		txtTitle = (TextView) findViewById(R.id.txtTuneResultName);
		txtArtist = (TextView) findViewById(R.id.txtTuneResultArtist);
		txtAlbum = (TextView) findViewById(R.id.txtTuneResultAlbum);
		txtYear = (TextView) findViewById(R.id.txtTuneResultYear);
		imgArtwork = (NetworkImageView) findViewById(R.id.imgTuneResultCover);
		txtPlayPreview = (TextView) findViewById(R.id.txtRecordTuneResultPlayPreview);
		txtPlayPreview.setMovementMethod(LinkMovementMethod.getInstance());
		
		filData();
	}

	public void filData(){
		extras = getIntent().getExtras();
		if( extras != null ){
			
			String imgUrl = extras.getString("tune_img");
			if(imgUrl.equals("")){
				imgArtwork.setImageUrl(DEFAULT_ARTWORK, imageLoader);
			}else {
				imgArtwork.setImageUrl(extras.getString("tune_img"), imageLoader);
			}
			
			spanUnderline = new SpannableString(extras.getString("tune_title"));
			spanUnderline.setSpan(new UnderlineSpan(), 0, spanUnderline.length(), 0);
			txtTitle.setText(spanUnderline);
			txtArtist.setText(extras.getString("tune_artist"));
			txtAlbum.setText(extras.getString("tune_album"));
			txtYear.setText(extras.getString("tune_year"));
			
			final String url = extras.getString("tune_url");
			txtPlayPreview.setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {
					if(url.equals("")){
						Toast.makeText(TuneResultActivity.this, "Preview not available.", Toast.LENGTH_LONG).show();
					}else{
						initializePreviewDialog(url);
					}
					
				}
			});
			
		}
		
	}
	
	private void initializePreviewDialog(String url) {
		timerHandler = new Handler();
		previewDialog = new Dialog(this);
		previewDialog.setContentView(R.layout.record_tune_result_play);
		previewDialog.setTitle("Preview");
		
		txtTimer = (TextView) previewDialog.findViewById(R.id.txtRecordTuneResultTimer);
		seekBar = (SeekBar) previewDialog.findViewById(R.id.recordTuneResultSeekBar);
		btnPlay = (Button) previewDialog.findViewById(R.id.btnRecordTuneResultPlay);
		btnStop = (Button) previewDialog.findViewById(R.id.btnRecordTuneResultStop);
		
		Uri previewUri = Uri.parse(url);
		try{
			mMediaplayer = new MediaPlayer();
			mMediaplayer.setAudioStreamType(AudioManager.STREAM_MUSIC);
			mMediaplayer = MediaPlayer.create(previewDialog.getContext(), previewUri);
		}catch(Exception e){
			Log.d(TAG, e.toString());
		}
		
		previewDialog.show();
		
		btnPlay.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				isPlaying = true;
				seekBar.setMax((int) mMediaplayer.getDuration());
				mMediaplayer.start();
				timeElapsed = mMediaplayer.getCurrentPosition();
				seekBar.setProgress((int) timeElapsed);
				timerHandler.postDelayed(updateSeekBarTime, 100);
			}
		});
		
		btnStop.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				isPlaying = false;
				mMediaplayer.pause();
				
			}
		});
		
		previewDialog.setOnDismissListener(new OnDismissListener() {
			
			@Override
			public void onDismiss(DialogInterface dialog) {
				mMediaplayer.stop();
			}
		});
		
	}
	
	private Runnable updateSeekBarTime = new Runnable() {
		
		@Override
		public void run() {
			if(isPlaying){
				timeElapsed = mMediaplayer.getCurrentPosition();
				seekBar.setProgress((int) timeElapsed);
				int timeRemaining = (int) (timeElapsed / 1000) + 1;
				txtTimer.setText("00:" + String.format("%02d",timeRemaining));
				timerHandler.postDelayed(this, 100);
			}
			
		}
	};
	
	
	
	public void ShareToCommunity(){
		
		dialog = new Dialog(this);
		dialog.setContentView(R.layout.record_tune_share_dialog);
		dialog.setTitle("Share with Community");
		
		txtDialogArtist = (TextView) dialog.findViewById(R.id.txtRecordTuneShareArtist);
		dialogLanguage = (Spinner) dialog.findViewById(R.id.spinnerRecordTuneShareLang);
		dialogCountry = (Spinner) dialog.findViewById(R.id.spinnerRecordTuneShareCountry);
		txtDialogYear = (TextView) dialog.findViewById(R.id.txtRecordTuneShareYear);
		btnDialogShare = (Button) dialog.findViewById(R.id.btnRecordTuneShareDialog);
		
		dialog.show();
		
		btnDialogShare.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				uploadTune();
				dialog.dismiss();
			}
		});
	}
	
	public void saveTuneObj(ParseFile tuneFile){
		TuneParse pTune = new TuneParse();
		ParseACL pTuneACL = new ParseACL(ParseUser.getCurrentUser());
		pTuneACL.setPublicReadAccess(true);
		pTune.setACL(pTuneACL);
		pTune.setCreatedBy(ParseUser.getCurrentUser());
		pTune.setArtist(testInput(txtDialogArtist.getText().toString()));
		pTune.setLanguage(testInput(String.valueOf(dialogLanguage.getSelectedItem())));
		pTune.setCountry(testInput(String.valueOf(dialogCountry.getSelectedItem())));
		pTune.setYear(testInput(txtDialogYear.getText().toString()));
		pTune.setStatus("pending");
		pTune.setTuneFile(tuneFile);
		
		pTune.saveEventually(new SaveCallback() {
			
			@Override
			public void done(ParseException e) {
				progressDialog.hide();
				if(e == null){
					Toast.makeText(TuneResultActivity.this, "Your tune uploaded succesfully.", Toast.LENGTH_LONG).show();
				}else{
					Toast.makeText(TuneResultActivity.this, "Tune upload failed", Toast.LENGTH_LONG).show();
				}
			}
		});
		
	}
	
	public void uploadTune(){
		progressDialog = ProgressDialog.show(this, "", "Uploading...", true);
		FileInputStream fileInputStream = null;
		File file = new File(tuneFile);
		
		byte[] bFile = new byte[(int) file.length()];
		
		try{
			fileInputStream = new FileInputStream(file);
			fileInputStream.read(bFile);
			fileInputStream.close();
			
		}catch(Exception e){
			Log.d(TAG, e.toString());
		}
		
		final ParseFile pFile = new ParseFile("audio.mp3", bFile);
		pFile.saveInBackground(new SaveCallback() {
			
			@Override
			public void done(ParseException e) {
				if(e == null){
					saveTuneObj(pFile);
				}else{
					progressDialog.hide();
					Toast.makeText(context, "File uplaod failed", Toast.LENGTH_LONG).show();
				}
				
			}
		});
	}
	
	public String testInput(String text){
		if(text.equalsIgnoreCase("-- Not Selected --"))
			return "";
		else
			return text;
	}
	
	
	

}
